<?php

require_once(__DIR__.'/../../../inc/includes.php');
require_once(__DIR__.'/../inc/ocssoapclient.class.php');

/**
 * Test class for ocssoapclient.
 * Generated by PHPUnit.
 */
class ocssoapclientTest extends PHPUnit_Framework_TestCase {
    /**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     */
    public static function main() {
        require_once 'PHPUnit/TextUI/TestRunner.php';

        $suite  = new PHPUnit_Framework_TestSuite('ocssoapclientTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp() {
       $config = parse_ini_file('/home/factorfx/config.ini');
       $this->url = $config['url'];
       $this->user  = $config['user'];
       $this->pass = $config['pass'];
       $this->logdiri = $config['logdiri'];
       $this->logdirt = $config['logdirt'];
       $this->client = new PluginOcsinventoryngOcsSoapClient($this->url,$this->user,$this->pass);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     *
     * @access protected
     */
    protected function tearDown() {
    }

 
    public function testConnect() {
        $test = new PluginOcsinventoryngOcsSoapClient($this->url,$this->user,$this->pass);
        $result = $this->client->getSoapClient()->getOcsConfig('LOG_DIR');
        $expected = array("IVALUE" => $this->logdiri,
                          "TVALUE" => $this->logdirt);
        $this->assertEquals($expected,$result);

    }
    
    /**
     * @depends testConnect
     */
    public function testFalseConfig() {
        $test = new PluginOcsinventoryngOcsSoapClient($this->url,$this->user,$this->pass);
        $result = $this->client->getSoapClient()->getOcsConfig('LOGLEVEL');
        $expected = array("IVALUE" => $this->logdiri,
                          "TVALUE" => $this->logdirt);
        $this->assertNotEquals($expected,$result);
    }

    public function testFalseLoginConnect() {
        $test = new PluginOcsinventoryngOcsSoapClient($this->url,'foo','bar');
        $result = $this->client->getSoapClient()->getOcsConfig('LOG_DIR');
        $expected = array("IVALUE" => $this->logdiri,
                          "TVALUE" => $this->logdirt);
        $this->assertNotEquals($expected,$result);

    }

    public function testFalseAddressConnect() {
        $test = new PluginOcsinventoryngOcsSoapClient('dummy',$this->user,$this->pass);
        $result = $this->client->getSoapClient()->getOcsConfig('LOG_DIR');
        $expected = array("IVALUE" => $this->logdiri,
                          "TVALUE" => $this->logdirt);
        $this->assertNotEquals($expected,$result);
    }


}
?>