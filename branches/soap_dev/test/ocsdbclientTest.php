<?php

/**
 * Test class for ocsdbclient.
 * Generated by PHPUnit.
 */
class ocsdbclientTest extends PHPUnit_Framework_TestCase {
    /**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     */
    public static function main() {
    	require_once 'PHPUnit/TextUI/TestRunner.php';

    	$suite  = new PHPUnit_Framework_TestSuite('ocssoapclientTest');
    	$result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp() {
    	global $DB, $CFG_GLPI;
    	
    	$_SERVER['REQUEST_URI'] = '/plugins';
		require_once(__DIR__.'/../../../inc/includes.php');

    	$this->client = new PluginOcsinventoryngOcsDbClient(1);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     *
     * @access protected
     */
    protected function tearDown() {
    	unset($this->client);
    }


    public function testConnect() {
  		$this->assertTrue($this->client->checkConnection());
    }

    public function testFalseConnect() {
    	// TODO
  		$this->assertFalse($this->client->checkConnection());
    }


/**
* @depends  testConnection
*/
public function testGetComputers($conditions=array(),$sort=NULL){
#TODO testGetComputers
var_dump(1);

}





/**
* @depends  testConnection
*/
public function testGetAccountInfo($id){
#TODO testGetAccountInfo
	
var_dump(1);
}


/**
* @depends  testConnection
*/
public function testGetConfig($select="*", $name){
#TODO testGetConfig
	

}



/**
* @depends  testConnection
*/
public function testGetCategorie($table, $condition=1, $sort){
#TODO testGetCategorie
	

}


/**
* @depends  testConnection
*/
public function testGetUnique($columns, $table, $conditions, $sort){
#TODO testGetUnique

}


/**
* @depends  testConnection
*/
public function testSetChecksum($checksum, $id){
#TODO testSetChecksum
	

}


/**
* @depends testConnection
*/
public function testDelEquiv($deleted, $equivclean = null){
#TODO testDelEquiv
	

}


/**
* @depends  testConnection
*/
public function testGetAccountInfoColumns(){
#TODO testGetAccountInfoColumns
	

}












/**
* @depends testGetComputers
*/
public function testFalseGetComputers($conditions=array(),$sort=NULL){
#TODO testFalseGetComputers
	

}


/**
* @depends testGetAccountInfo
*/
public function testFalseGetAccountInfo($id){
#TODO testFalseGetAccountInfo
	

}


/**
* @depends testGetConfig
*/
public function testFalseGetConfig($select="*", $name){
#TODO testFalseGetConfig
	

}


/**
* @depends testGetCategorie
*/
public function testFalseGetCategorie($table, $condition=1, $sort){
#TODO testFalseGetCategorie
	

}


/**
* @depends testGetUnique
*/
public function testFalseGetUnique($columns, $table, $conditions, $sort){
#TODO testFalseGetUnique

}


/**
* @depends testSetChecksum
*/
public function testFalseSetChecksum($checksum, $id){
#TODO testFalseSetChecksum
	

}


/**
* @depends testDelEquiv
*/
public function testFalseDelEquiv($deleted, $equivclean = null){
#TODO testFalseDelEquiv
	

}


/**
* @depends testGetAccountInfoColumns
*/
public function testFalseGetAccountInfoColumns(){
#TODO testFalseGetAccountInfoColumns
	

}



}










